version: '2'

volumes:
  
  ca.admindachannel.example.com:
  zookeeper0:
  zookeeper1:
  zookeeper2:
  kafka0:
  kafka1:
  kafka2:
  kafka3:
  orderer0.example.com:
  orderer1.example.com:
  orderer2.example.com:
  peer0.daiict.example.com:
  peer1.daiict.example.com:

networks:
  byfn:

services:
  zookeeper0:
    extends:
      file: zooka-base.yaml
      service: zookeeper
    container_name: zookeeper0
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      - byfn

  zookeeper1:
    extends:
      file: zooka-base.yaml
      service: zookeeper
    container_name: zookeeper1
    environment:
      - ZOO_MY_ID=2
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      - byfn

  zookeeper2:
    extends:
      file: zooka-base.yaml
      service: zookeeper
    container_name: zookeeper2
    environment:
      - ZOO_MY_ID=3
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      - byfn

  kafka0:
    extends:
      file: zooka-base.yaml
      service: kafka
    container_name: kafka0
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_MESSAGE_MAX_BYTES=2147483647
      - KAFKA_REPLICA_FETCH_MAX_BYTES=2147483647
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=2147483647
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      - byfn

  kafka1:
    extends:
      file: zooka-base.yaml
      service: kafka
    container_name: kafka1
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_MESSAGE_MAX_BYTES=2147483647
      - KAFKA_REPLICA_FETCH_MAX_BYTES=2147483647
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=2147483647
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      - byfn

  kafka2:
    extends:
      file: zooka-base.yaml
      service: kafka
    container_name: kafka2
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_MESSAGE_MAX_BYTES=2147483647
      - KAFKA_REPLICA_FETCH_MAX_BYTES=2147483647
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=2147483647
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      - byfn

  kafka3:
    extends:
      file: zooka-base.yaml
      service: kafka
    container_name: kafka3
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_MESSAGE_MAX_BYTES=2147483647
      - KAFKA_REPLICA_FETCH_MAX_BYTES=2147483647
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=2147483647
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      - byfn

  orderer0.example.com:
    extends:
      file: ./orderer-base.yaml
      service: orderer
    container_name: orderer0.example.com
    environment:
      - ORDERER_HOST=orderer0.example.com
      - CONFIGTX_ORDERER_ORDERERTYPE=kafka
      - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_RETRY_LONGINTERVAL=30s
      - ORDERER_KAFKA_RETRY_LONGTOTAL=5m
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
      - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
      - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
      - ORDERER_GENERAL_SERVERROOTCAS_FILE=/var/hyperledger/tls/ca.crt
      - ORDERER_GENERAL_SERVERCERT_FILE=/var/hyperledger/tls/server.crt
      - ORDERER_GENERAL_SERVERKEY_FILE=/var/hyperledger/tls/server.key
    volumes:
      - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/msp:/var/hyperledger/msp
      - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/tls:/var/hyperledger/tls
      - ../network-config/:/var/hyperledger/configs
    networks:
      - byfn

    ports:
      - 7050:7050

  orderer1.example.com:
    extends:
      file:   ./orderer-base.yaml
      service: orderer
    container_name: orderer1.example.com
    environment:
      - ORDERER_HOST=orderer1.example.com
      - CONFIGTX_ORDERER_ORDERERTYPE=kafka
      - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_RETRY_LONGINTERVAL=30s
      - ORDERER_KAFKA_RETRY_LONGTOTAL=5m
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
      - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
      - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
      - ORDERER_GENERAL_SERVERROOTCAS_FILE=/var/hyperledger/tls/ca.crt
      - ORDERER_GENERAL_SERVERCERT_FILE=/var/hyperledger/tls/server.crt
      - ORDERER_GENERAL_SERVERKEY_FILE=/var/hyperledger/tls/server.key
    volumes:
      - ../crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/msp:/var/hyperledger/msp
      - ../crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/tls:/var/hyperledger/tls
      - ../network-config/:/var/hyperledger/configs
    networks:
      - byfn

    ports:
      - 8050:8050

  orderer2.example.com:
    extends:
      file:   ./orderer-base.yaml
      service: orderer
    container_name: orderer2.example.com
    environment:
      - ORDERER_HOST=orderer2.example.com
      - CONFIGTX_ORDERER_ORDERERTYPE=kafka
      - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_RETRY_LONGINTERVAL=30s
      - ORDERER_KAFKA_RETRY_LONGTOTAL=5m
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
      - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
      - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
      - ORDERER_GENERAL_SERVERROOTCAS_FILE=/var/hyperledger/tls/ca.crt
      - ORDERER_GENERAL_SERVERCERT_FILE=/var/hyperledger/tls/server.crt
      - ORDERER_GENERAL_SERVERKEY_FILE=/var/hyperledger/tls/server.key
    volumes:
      - ../crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/msp:/var/hyperledger/msp
      - ../crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls:/var/hyperledger/tls
      - ../network-config/:/var/hyperledger/configs
    networks:
      - byfn

    ports:
      - 9050:9050
  
  peer0.daiict.example.com:
    container_name: peer0.daiict.example.com
    extends:
      file: ./docker-compose-base.yaml
      service: peer0.daiict.example.com
    depends_on:
      - orderer0.example.com
      - orderer1.example.com
      - orderer2.example.com
    networks:
      - byfn

  peer1.daiict.example.com:
    container_name: peer1.daiict.example.com
    extends:
      file: ./docker-compose-base.yaml
      service: peer1.daiict.example.com
    depends_on:
      - orderer0.example.com
      - orderer1.example.com
      - orderer2.example.com
    networks:
      - byfn

  ca.admindachannel.example.com:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.admindachannel.example.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.admindachannel.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/f6c81813f01ef5ddfc4e4dc5809bb7a4fe5e46d954c2a1d81d93bfc862235e6a_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw'
    volumes:
      - ../crypto-config/peerOrganizations/admindachannel.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.admindachannel.example.com
    networks:
      - byfn